{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Archive2\\\\src\\\\components\\\\key\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport roles from '../../data/role.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [newUserUsername, setNewUserUsername] = useState('');\n  const [newUserPassword, setNewUserPassword] = useState('');\n  const [newUserRole, setNewUserRole] = useState('user'); // Default role\n  const [currentPage, setCurrentPage] = useState('gudang'); // Default page\n  const [availableRoles, setAvailableRoles] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    setAvailableRoles(roles.roles.map(role => role.role)); // Adjust to access the roles array inside roles JSON\n    const storedUsers = localStorage.getItem('users');\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n  const addUser = (username, password, role) => {\n    const newUser = {\n      username,\n      password,\n      role\n    };\n    const updatedUsers = [...users, newUser]; // Update the users array\n    setUsers(updatedUsers);\n    localStorage.setItem('users', JSON.stringify(updatedUsers)); // Update localStorage\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    addUser(newUserUsername, newUserPassword, newUserRole);\n    setNewUserUsername('');\n    setNewUserPassword('');\n    setNewUserRole('user'); // Reset role to default\n  };\n  const navigateTo = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"xsD33HXGcgTD4YQ2amnS6/DJU0I=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","roles","jsxDEV","_jsxDEV","AdminPage","_s","newUserUsername","setNewUserUsername","newUserPassword","setNewUserPassword","newUserRole","setNewUserRole","currentPage","setCurrentPage","availableRoles","setAvailableRoles","users","setUsers","map","role","storedUsers","localStorage","getItem","JSON","parse","addUser","username","password","newUser","updatedUsers","setItem","stringify","handleSubmit","e","preventDefault","navigateTo","page","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Archive2/src/components/key/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport roles from '../../data/role.json';\r\n\r\nconst AdminPage = () => {\r\n  const [newUserUsername, setNewUserUsername] = useState('');\r\n  const [newUserPassword, setNewUserPassword] = useState('');\r\n  const [newUserRole, setNewUserRole] = useState('user'); // Default role\r\n  const [currentPage, setCurrentPage] = useState('gudang'); // Default page\r\n  const [availableRoles, setAvailableRoles] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAvailableRoles(roles.roles.map(role => role.role)); // Adjust to access the roles array inside roles JSON\r\n    const storedUsers = localStorage.getItem('users');\r\n    if (storedUsers) {\r\n      setUsers(JSON.parse(storedUsers));\r\n    }\r\n  }, []);\r\n\r\n  const addUser = (username, password, role) => {\r\n    const newUser = { username, password, role };\r\n    const updatedUsers = [...users, newUser]; // Update the users array\r\n    setUsers(updatedUsers);\r\n    localStorage.setItem('users', JSON.stringify(updatedUsers)); // Update localStorage\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addUser(newUserUsername, newUserPassword, newUserRole);\r\n    setNewUserUsername('');\r\n    setNewUserPassword('');\r\n    setNewUserRole('user'); // Reset role to default\r\n  };\r\n\r\n  const navigateTo = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {/* Your code for adding new user */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACde,iBAAiB,CAACd,KAAK,CAACA,KAAK,CAACiB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfH,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,OAAO,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAER,IAAI,KAAK;IAC5C,MAAMS,OAAO,GAAG;MAAEF,QAAQ;MAAEC,QAAQ;MAAER;IAAK,CAAC;IAC5C,MAAMU,YAAY,GAAG,CAAC,GAAGb,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAC;IAC1CX,QAAQ,CAACY,YAAY,CAAC;IACtBR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,OAAO,CAACnB,eAAe,EAAEE,eAAe,EAAEE,WAAW,CAAC;IACtDH,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMwB,UAAU,GAAIC,IAAI,IAAK;IAC3BvB,cAAc,CAACuB,IAAI,CAAC;EACtB,CAAC;EAED,oBACEjC,OAAA;IAAKkC,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEV,CAAC;AAACpC,EAAA,CAxCID,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}