{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Archive2\\\\src\\\\components\\\\key\\\\KasirPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KasirPage = ({\n  transactions,\n  barangs,\n  onValidateTransaction,\n  onRequestSupplier\n}) => {\n  _s();\n  const [payment, setPayment] = useState('');\n  const [discount, setDiscount] = useState('');\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSelectTransaction = transaction => {\n    setSelectedTransaction(transaction);\n    setPayment('');\n    setDiscount('');\n    setErrorMessage('');\n  };\n  const handleValidationSubmit = e => {\n    e.preventDefault();\n    const barang = barangs.find(b => b.id === selectedTransaction.barangId);\n    if (barang) {\n      if (barang.stock >= selectedTransaction.quantity) {\n        onValidateTransaction(selectedTransaction.id, payment, discount);\n        setSelectedTransaction(null);\n        setPayment('');\n        setDiscount('');\n      } else {\n        setErrorMessage('Stock insufficient. Please request more stock from the supplier.');\n      }\n    } else {\n      setErrorMessage('Barang not found in inventory.');\n    }\n  };\n  const handleRequestStock = () => {\n    const barang = barangs.find(b => b.id === selectedTransaction.barangId);\n    if (barang) {\n      onRequestSupplier(selectedTransaction.barangId, selectedTransaction.quantity - barang.stock);\n      setErrorMessage('Stock request sent to supplier.');\n    } else {\n      setErrorMessage('Barang not found in inventory.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Kasir Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        onClick: () => handleSelectTransaction(transaction),\n        children: [transaction.itemName, \" - \", transaction.quantity, \" @ \", transaction.price]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), selectedTransaction && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleValidationSubmit,\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Validate Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"payment\",\n          className: \"form-label\",\n          children: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"payment\",\n          value: payment,\n          onChange: e => setPayment(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"discount\",\n          className: \"form-label\",\n          children: \"Discount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"discount\",\n          value: discount,\n          onChange: e => setDiscount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Validate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), errorMessage.includes('insufficient') && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: handleRequestStock,\n        children: \"Request Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(KasirPage, \"Y3HE5riRMgOLYySS1AVNU7YUO+U=\");\n_c = KasirPage;\nexport default KasirPage;\nvar _c;\n$RefreshReg$(_c, \"KasirPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","KasirPage","transactions","barangs","onValidateTransaction","onRequestSupplier","_s","payment","setPayment","discount","setDiscount","selectedTransaction","setSelectedTransaction","errorMessage","setErrorMessage","handleSelectTransaction","transaction","handleValidationSubmit","e","preventDefault","barang","find","b","id","barangId","stock","quantity","handleRequestStock","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","itemName","price","onSubmit","htmlFor","type","value","onChange","target","required","includes","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Archive2/src/components/key/KasirPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst KasirPage = ({ transactions, barangs, onValidateTransaction, onRequestSupplier }) => {\r\n  const [payment, setPayment] = useState('');\r\n  const [discount, setDiscount] = useState('');\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSelectTransaction = (transaction) => {\r\n    setSelectedTransaction(transaction);\r\n    setPayment('');\r\n    setDiscount('');\r\n    setErrorMessage('');\r\n  };\r\n\r\n  const handleValidationSubmit = (e) => {\r\n    e.preventDefault();\r\n    const barang = barangs.find(b => b.id === selectedTransaction.barangId);\r\n    if (barang) {\r\n      if (barang.stock >= selectedTransaction.quantity) {\r\n        onValidateTransaction(selectedTransaction.id, payment, discount);\r\n        setSelectedTransaction(null);\r\n        setPayment('');\r\n        setDiscount('');\r\n      } else {\r\n        setErrorMessage('Stock insufficient. Please request more stock from the supplier.');\r\n      }\r\n    } else {\r\n      setErrorMessage('Barang not found in inventory.');\r\n    }\r\n  };\r\n\r\n  const handleRequestStock = () => {\r\n    const barang = barangs.find(b => b.id === selectedTransaction.barangId);\r\n    if (barang) {\r\n      onRequestSupplier(selectedTransaction.barangId, selectedTransaction.quantity - barang.stock);\r\n      setErrorMessage('Stock request sent to supplier.');\r\n    } else {\r\n      setErrorMessage('Barang not found in inventory.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kasir Page</h2>\r\n      <h3>Transactions</h3>\r\n      <ul className=\"list-group\">\r\n        {transactions.map((transaction) => (\r\n          <li\r\n            key={transaction.id}\r\n            className=\"list-group-item\"\r\n            onClick={() => handleSelectTransaction(transaction)}\r\n          >\r\n            {transaction.itemName} - {transaction.quantity} @ {transaction.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {selectedTransaction && (\r\n        <form onSubmit={handleValidationSubmit} className=\"mt-3\">\r\n          <h4>Validate Transaction</h4>\r\n          {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"payment\" className=\"form-label\">Payment</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"payment\"\r\n              value={payment}\r\n              onChange={(e) => setPayment(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"discount\" className=\"form-label\">Discount</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"discount\"\r\n              value={discount}\r\n              onChange={(e) => setDiscount(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Validate</button>\r\n          {errorMessage.includes('insufficient') && (\r\n            <button type=\"button\" className=\"btn btn-warning\" onClick={handleRequestStock}>Request Stock</button>\r\n          )}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KasirPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}