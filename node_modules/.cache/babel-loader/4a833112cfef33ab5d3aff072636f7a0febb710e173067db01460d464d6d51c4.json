{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Archive2\\\\src\\\\components\\\\key\\\\SupplierPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplierPage = ({\n  orders,\n  barangs,\n  onUpdateStock\n}) => {\n  _s();\n  const [newOrders, setNewOrders] = useState(orders);\n  const handleReceiveOrder = orderId => {\n    const updatedOrders = newOrders.map(order => order.id === orderId ? {\n      ...order,\n      status: 'received'\n    } : order);\n    setNewOrders(updatedOrders);\n    const receivedOrder = updatedOrders.find(order => order.id === orderId);\n    const barang = barangs.find(b => b.id === receivedOrder.barangId);\n    if (barang) {\n      onUpdateStock(barang.id, receivedOrder.quantity);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supplier Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: newOrders.filter(order => order.status === 'pending').map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Order ID: \", order.id, \" - Item ID: \", order.barangId, \" - Quantity: \", order.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success ml-3\",\n          onClick: () => handleReceiveOrder(order.id),\n          children: \"Receive Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Received Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children: newOrders.filter(order => order.status === 'received').map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Order ID: \", order.id, \" - Item ID: \", order.barangId, \" - Quantity: \", order.quantity]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SupplierPage, \"P1W9yQlG6H52waoD56T1EE9ofto=\");\n_c = SupplierPage;\nexport default SupplierPage;\nvar _c;\n$RefreshReg$(_c, \"SupplierPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SupplierPage","orders","barangs","onUpdateStock","_s","newOrders","setNewOrders","handleReceiveOrder","orderId","updatedOrders","map","order","id","status","receivedOrder","find","barang","b","barangId","quantity","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Archive2/src/components/key/SupplierPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SupplierPage = ({ orders, barangs, onUpdateStock }) => {\r\n  const [newOrders, setNewOrders] = useState(orders);\r\n\r\n  const handleReceiveOrder = (orderId) => {\r\n    const updatedOrders = newOrders.map(order =>\r\n      order.id === orderId ? { ...order, status: 'received' } : order\r\n    );\r\n    setNewOrders(updatedOrders);\r\n\r\n    const receivedOrder = updatedOrders.find(order => order.id === orderId);\r\n    const barang = barangs.find(b => b.id === receivedOrder.barangId);\r\n\r\n    if (barang) {\r\n      onUpdateStock(barang.id, receivedOrder.quantity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Supplier Page</h2>\r\n      <h3>Pending Orders</h3>\r\n      <ul className=\"list-group\">\r\n        {newOrders\r\n          .filter(order => order.status === 'pending')\r\n          .map(order => (\r\n            <li key={order.id} className=\"list-group-item\">\r\n              Order ID: {order.id} - Item ID: {order.barangId} - Quantity: {order.quantity}\r\n              <button\r\n                className=\"btn btn-success ml-3\"\r\n                onClick={() => handleReceiveOrder(order.id)}\r\n              >\r\n                Receive Order\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <h3>Received Orders</h3>\r\n      <ul className=\"list-group mt-3\">\r\n        {newOrders\r\n          .filter(order => order.status === 'received')\r\n          .map(order => (\r\n            <li key={order.id} className=\"list-group-item\">\r\n              Order ID: {order.id} - Item ID: {order.barangId} - Quantity: {order.quantity}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupplierPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}